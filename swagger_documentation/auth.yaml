openapi: 3.0.0
info:
  title: User Management API
  description: API for managing users, including CRUD operations and authentication.
  version: 1.0.0
servers:
  - url: {{host}}
paths:
  /users:
    get:
      summary: Get all users
      description: Retrieve a paginated list of all users.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successfully retrieved users
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: نجاح, تم إرجاع جميع القيم
                  page_meta:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 2
                      deleted:
                        type: integer
                        example: 2
                      page:
                        type: integer
                        example: 1
                      perPage:
                        type: integer
                        example: 20
                      totalPages:
                        type: integer
                        example: 1
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        email:
                          type: string
                          format: email
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
        '404':
          description: No users found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: لم يتم العثور على سجل
                  page_meta:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 0
                      deleted:
                        type: integer
                        example: 0
                      page:
                        type: integer
                        example: 0
                      perPage:
                        type: integer
                        example: 0
                      totalPages:
                        type: integer
                        example: 0

  /user/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a single user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: نجاح, تم إرجاع قيمة واحدة
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: لم يتم العثور على سجل

  /register:
    post:
      summary: Create a new user
      description: Register a new user with email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: تم الإنشاء بنجاح
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: موجود بالفعل

  /login:
    post:
      summary: Log in a user
      description: Authenticate a user and provide access and refresh tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: loginSuccessful
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      user_access_token:
                        type: string
                      user_refresh_token:
                        type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found

  /refresh_token:
    post:
      summary: Refresh access token
      description: Provide a new access token using a valid refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
      responses:
        '200':
          description: Successfully refreshed token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: refreshTokenSuccessful
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      user_access_token:
                        type: string
                      user_refresh_token:
                        type: string
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: invalidRefreshToken

  /change_password/{id}:
    put:
      summary: Change user password
      description: Update the password for a specific user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
              required:
                - old_password
                - new_password
      responses:
        '200':
          description: Password successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: تم التحديث بنجاح
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: لم يتم العثور على سجل
        '401':
          description: Incorrect old password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Incorrect old password

  /user/{id}:
    put:
      summary: Update user details
      description: Update details for a specific user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: تم التحديث بنجاح
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: لم يتم العثور على السجل للتحديث.

  /user/{id}:
    delete:
      summary: Delete a user
      description: Remove a specific user from the system.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: تم الحذف بنجاح
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: لم يتم العثور على سجل
