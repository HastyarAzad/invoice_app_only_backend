
{
  "hello": "Hello World",
  "welcome": "Welcome to the world of programming",
  "goodbye": "Goodbye",
  "loginSuccess": "Login successful.",
  "invalidCredentials": "Invalid credentials.",
  "internalServerError": "Internal server error.",
  "noRecordFound": "No record found",
  "returnedAllValues": "Success, Returned all values",
  "returnedSingleValue": "Success, Returned single value",
  "noDataProvided": "No data provided",
  "invalidRole": "Invalid role",
  "updatedSuccessful": "Updated successfully",
  "deletedSuccessful": "Deleted successfully",
  "createdSuccessful": "Created successfully",
  "incorrectOldPassword": "Incorrect old password",
  "passwordIncorrect": "Password incorrect",
  "noRefreshTokenProvided": "No refresh token provided",
  "userNotFound": "User not found",
  "imageUploadError": "Error uploading image",
  "productNotFound": "Product with the id {{ids}} not found",
  "productNotInStock": "Product with the id {{ids}} is not in stock",
  "customerNotEnoughBalance": "Customer does not have enough balance",
  "TaxRateOrThresholdNotFound": "Tax rate or threshold not found",
  "success": "Success",
  "prisma": {
    "P1000": "The database server is not running.",
    "P1001": "couldn't reach the database server.",
    "P1002": "timed out",
    "P1016": "please provide valid values.",
    "P2000": "The Field contains too much data",
    "P2001": "The record searched for does not exist.",
    "P2002": "Already exists",
    "P2003": "The selected value does not exist.",
    "P2025": "Record to update not found.",
    "defaultPrismaError": "An error occurred. Please try again later."
  },
  "joiErrors": {
    "string.base": "{{#label}} should be a string",
    "string.empty": "{{#label}} should not be empty",
    "string.min": "Length should be at least {{#limit}} characters",
    "string.max": "Length should not exceed {{#limit}} characters",
    "string.length": "Length should be {{#limit}} characters",
    "string.pattern.base": "{{#label}} does not match the required pattern",
    "string.pattern.name": "{{#label}} does not match the {{#name}} pattern",
    "string.email": "{{#label}} should be a valid email address",
    "string.uri": "{{#label}} should be a valid URI",
    "string.uuid": "{{#label}} should be a valid UUID",
    "string.trim": "{{#label}} should not have leading or trailing whitespaces",
    "string.lowercase": "{{#label}} should be in lowercase",
    "string.uppercase": "{{#label}} should be in uppercase",
    "string.token": "{{#label}} contains invalid token characters",
    "string.phoneNumber": "{{#label}} Invalid phone number",
    "phoneNumber.invalid": "{{#label}} Invalid phone number",

    "number.base": "{{#label}} should be a number",
    "number.min": "{{#label}} should be at least {{#limit}}",
    "number.max": "{{#label}} should not exceed {{#limit}}",
    "number.less": "{{#label}} should be less than {{#limit}}",
    "number.greater": "{{#label}} should be greater than {{#limit}}",
    "number.integer": "{{#label}} should be an integer",
    "number.positive": "{{#label}} should be a positive number",
    "number.negative": "{{#label}} should be a negative number",
    "number.multiple": "{{#label}} should be a multiple of {{#multiple}}",
    "number.precision": "{{#label}} should have no more than {{#limit}} decimal places",

    "array.base": "{{#label}} should be an array",
    "array.min": "Array should have at least {{#limit}} items",
    "array.max": "Array should have at most {{#limit}} items",
    "array.length": "Array should have {{#limit}} items",
    "array.ordered": "Array items are not in the correct order",
    "array.includesOne": "Array should include one of the specified values",
    "array.includes": "Array contains a {{#label}} that does not match any allowed schemas",
    "array.unique": "Array contains duplicate values",
    "array.sparse": "Array should not have sparse items",
    "array.has": "Array should contain at least one item matching the required condition",
    "array.includesRequiredUnknowns": "{{#label}} needs at least {{#unknownMisses}} value(s)",

    "object.base": "{{#label}} should be an object",
    "object.unknown": "{{#label}} is not allowed",
    "object.nand": "{{#label}} should not contain both {{#mainWithLabel}} and {{#peersWithLabels}}",
    "object.oxor": "Either {{#peersWithLabels}} or {{#mainWithLabel}} should be present, but not both",
    "object.or": "{{#label}} should contain at least one of {{#peersWithLabels}}",
    "object.and": "{{#label}} should contain both {{#peersWithLabels}}",
    "object.missing": "{{#label}} should contain at least one of {{#peersWithLabels}} because {{#mainWithLabel}} is present",

    "boolean.base": "{{#label}} should be true or false",

    "date.base": "{{#label}} should be a date",
    "date.format": "Date format should be {{#format}}",
    "date.strict": "Date {{#label}} does not match the required format",
    "date.min": "Date should be after {{#limit}}",
    "date.max": "Date should be before {{#limit}}",

    "binary.base": "{{#label}} should be a buffer or a string",
    "binary.min": "{{#label}} should have at least {{#limit}} bytes",
    "binary.max": "{{#label}} should have at most {{#limit}} bytes",

    "any.required": "{{#label}} is required",
    "any.unknown": "{{#label}} is not allowed",
    "any.invalid": "{{#label}} is invalid",
    "any.only": "{{#label}} should match one of the allowed values: {{#valids}}",
    "any.ref": "Reference values for {{#label}} do not match",
    "any.default": "Error while resolving the default value for {{#label}}"
  }
}
    
